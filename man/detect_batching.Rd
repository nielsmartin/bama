% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bama_detection.R
\name{detect_batching}
\alias{detect_batching}
\title{Detect Batch Behavior in a Task Log}
\usage{
detect_batching(
  task_log,
  act_seq_tolerated_gap_list,
  timestamp_format = "yyyy-mm-dd hh:mm:ss",
  numeric_timestamps = TRUE,
  log_and_model_based,
  subsequence_list,
  subsequence_type,
  within_case_seq_tolerated_gap = 0,
  between_cases_seq_tolerated_gap = 0,
  show_progress = T
)
}
\arguments{
\item{task_log}{The task log containing task or activity instances.}

\item{act_seq_tolerated_gap_list}{List containing the tolerated time gap for a particular each activity (used for sequential batching detection)}

\item{timestamp_format}{Format in which the timestamps are specified}

\item{numeric_timestamps}{Boolean indicating whether timestamps are expressed numerically (instead of in POSIXct format)}

\item{log_and_model_based}{Boolean indicating whether a notion of the process model is present (i.e. whether arrival times are contained in the activity log)}

\item{subsequence_list}{List of subsequences for which case-based sequential/concurrent batching needs to be checked}

\item{subsequence_type}{Reflects the way in which subsequences are generated: by enumeration (enum) or using a sequence mining method (mine)}

\item{within_case_seq_tolerated_gap}{Tolerated time gap to detect sequential batching between activities within a particular case}

\item{between_cases_seq_tolerated_gap}{Tolerated time gap to detect sequential batching between (aggregated) activities over several cases}

\item{show_progress}{Whether to show a progress bar in the console.}
}
\description{
Detect batch behavior using the Bama algorithm based on a plain task log.
}
